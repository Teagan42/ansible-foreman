<%#
kind: PXELinux
name: Kickstart rescue PXELinux
model: ProvisioningTemplate
snippet: true
-%>


# This file was deployed via '<%= template_name %>' template

<%

  if @host.operatingsystem.family == 'Debian'

  pxe_kernel_options = []
  if host_param('kernel_params')
    pxe_kernel_options << host_param('kernel_params')
  end
  pxe_kernel_options = pxe_kernel_options.join(' ')

  options = []
  if host_param('blacklist')
    options << host_param('blacklist').split(',').collect{|x| "#{x.strip}.blacklist=yes"}.join(' ')
  end
  if @host.operatingsystem.name == 'Debian'
    options << "auto=true"
    options << "domain=#{@host.domain}"
  else
    options << 'console-setup/ask_detect=false console-setup/layout=USA console-setup/variant=USA keyboard-configuration/layoutcode=us localechooser/translation/warn-light=true localechooser/translation/warn-severe=true'
  end
  options << "locale=#{host_param('lang') || 'en_US'}"
  options = options.join(' ')

elsif @host.operatingsystem.family == 'RedHat'

 major = @host.operatingsystem.major.to_i
  mac = @host.provision_interface.mac

  # Tell Anaconda to perform network functions with boot interface
  #  both current and legacy syntax provided
  options = ["network", "ksdevice=bootif", "ks.device=bootif"]
  if mac
    bootif = '00-' + mac.gsub(':', '-')
    options.push("BOOTIF=#{bootif}")
  end

  # Tell Anaconda what to pass off to kickstart server
  #  both current and legacy syntax provided
  options.push("kssendmac", "ks.sendmac", "inst.ks.sendmac")

  # Set up DHCP or Static IP Addressing for OS Install
  # to handle non-DHCP environments (e.g. bootdisk)
  # and respect manually-set IP even on dhcp-enabled subnets

  subnet = @host.provision_interface.subnet
  # Check to see if an IP has been assigned to the host
  host_ip = @host.provision_interface.ip
  host_ipset = host_ip.nil? ? false : true

  # If subnet dhcp boot mode is static, diable DHCP and use host IP
  if @static
    dhcp = false
  # Disregard subnet boot mode = dhcp if an IP address has been assigned
  elsif host_ipset
    dhcp = false
  # If no subnet has been assiggned, enable DHCP
  elsif subnet.nil?
    dhcp = true
  # Otherwise, use the subnet default DHCP boot mode
  else
    dhcp = subnet.dhcp_boot_mode?
  end

  # Static network configuration

  unless dhcp
    ip = host_ip
    mask = subnet.mask
    gw = subnet.gateway
    if (@host.operatingsystem.name.match(/Fedora/i) && major < 17) || major < 7
      # old Anacoda found in Fedora 16 or RHEL 6 and older
      dns_servers = subnet.dns_servers.join(',')
      options.push("ip=#{ip}", "netmask=#{mask}", "gateway=#{gw}", "dns=#{dns_servers}")
    else
      options.push("ip=#{ip}::#{gw}:#{mask}:::none")
      subnet.dns_servers.each { |server|
        options.push("nameserver=#{server}")
      }
    end
  end

  # optional repository for Atomic
  if @host.operatingsystem.name.match(/Atomic/i)
    options.push("inst.repo=#{medium_uri}")
  end

  if @host.operatingsystem.name.match(/Atomic/i) || host_param('kickstart_liveimg')
    options.push('inst.stage2=' + @host.operatingsystem.medium_uri(@host).to_s)
  end

  if @host.operatingsystem.name != 'Fedora' && @host.operatingsystem.major.to_i >= 7 && host_param_true?('fips_enabled')
    options.push('fips=1')
  end

  ksoptions = options.join(' ')
  timeout = host_param('loader_timeout').to_i * 10
  timeout = 100 if timeout.nil? || timeout <= 0
  pxe_kernel_options = []
  if host_param('kernel_params')
    pxe_kernel_options << host_param('kernel_params')
  end
  pxe_kernel_options = pxe_kernel_options.join(' ')

end
-%>


UI menu.c32
MENU TITLE Booting unknown host (ESC to stop)
TIMEOUT 200
ONTIMEOUT rescue
DEFAULT rescue

LABEL local
  MENU LABEL Default local boot
  LOCALBOOT 0

LABEL local_primary
  MENU LABEL Default local boot from primary hard drive
  LOCALBOOT 0x80

<% if @host.operatingsystem.family == 'RedHat' -%>

LABEL rescue
  MENU LABEL Rescue CentOS 8 Linux System
  KERNEL boot/centos8-vmlinuz
  APPEND initrd=boot/centos8-initrd.img ks=<%= foreman_url('provision') %> <%= pxe_kernel_options %> <%= ksoptions %> rescue quiet
  IPAPPEND 2

<% elsif @host.operatingsystem.family == 'Debian' -%>

LABEL rescue
  MENU LABEL <%= template_name %> rescue
  KERNEL <%= @kernel %>
  APPEND initrd=<%= @initrd %> interface=auto url=<%= foreman_url('provision')%> ramdisk_size=10800 root=/dev/rd/0 rw auto rescue/enable=true hostname=<%= @host.name %> <%= options %> <%= pxe_kernel_options %>
  IPAPPEND 2

<% else -%>

LABEL rescue
  MENU LABEL <%= template_name %> rescue
  KERNEL <%= @kernel %>
  APPEND initrd=<%= @initrd %> ks=<%= foreman_url('provision') %> <%= pxe_kernel_options %> <%= ksoptions %> rescue quiet
  IPAPPEND 2

<% end -%>

LABEL memtest
  MENU LABEL Memtest86+ v5.01
  KERNEL boot/memtest
<%#-%>
