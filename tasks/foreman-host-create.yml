---
- name: Query foreman hosts
  command: hammer -r host list
  register: hostlist

#- debug:
#    msg: "{{ hostlist }}"

- name: Get host build status
  shell: |
    hammer -r host info --name {{ item.name }}.{{ www_domain }} | egrep -i '(build status)' | sed -r 's/^.*:\s+(\w.*)$/\1/'
  register: buildstatus
  loop: "{{ foreman_hosts }}"
  when: item.name in hostlist.stdout

#- debug:
#    msg: "{{ item }}"
#  loop: "{{ buildstatus.results }}"
#  when: item.changed

- name: "Create hosts via hammer cli"
  command: >
    {% if item.item.name not in hostlist.stdout %}
    hammer -r host create --name '{{ item.item.name }}' --hostgroup '{{ item.item.hostgroup }}' --build '1'
    --location 'Default Location' --organization 'Default Organization'
    --interface '{
    {% if item.item.provider is defined and item.item.provider == "kvm" %}
    "compute_bridge": "br{{ item.item.vlan_id | default('0') | regex_replace('10', '0') }}",
    "compute_model": "virtio",
    "compute_type": "bridge",
    {% endif %}
    {% if item.item.ip is defined %}
    "ip": "{{ item.item.ip }}",
    {% endif %}
    {% if item.item.mac_address is defined %}
    "mac": "{{ item.item.mac_address }}",
    {% endif %}
    "identifier": "{{ item.item.interface | default('eth0') }}"
    }'
    {% if item.item.provider is defined and item.item.provider == "kvm" %}
    --compute-attributes '{
    "cpus": {{ item.item.cpu_cores }},
    "memory": {{ item.item.memory | regex_replace("^([0-9]+)\s+?.*$", "\1GB") | human_to_bytes }},
    "start": "0"
    }'
    --volume '{
    "capacity": {{ (item.item.disk_size | regex_replace("^([0-9]+)\s+?.*$", "\1GB") | human_to_bytes // 1073741824) }},
    "format_type": "qcow2"
    }'
    {% endif %}
    {% if item.item.provider is defined and item.item.provider == "ipmi" %}
    --interface '{
    "ip": "{{ item.item.ipmi_ip}}",
    "mac": "{{ item.item.ipmi_mac_address }}",
    "type": "bmc",
    "provider": "ipmi",
    "username": "{{ item.item.ipmi_username }}",
    "password": "{{ item.item.ipmi_password }}"
    }'
    {% endif %}
    {% else %}
    {% if "Pending" not in item.stdout %}
    hammer -r host update --name {{ item.item.name }}.{{ www_domain }} --build '1'
    {% else %}
    hammer -qr host info --name {{ item.item.name }}.{{ www_domain }}
    {% endif %}
    {% endif %}
  loop: "{{ buildstatus.results }}"
  register: foreman_hosts_created
  changed_when: foreman_hosts_created.stdout == "Host updated." or foreman_hosts_created.stdout == "Host created."

#- debug:
#    msg: "{{ item }}"
#  loop: "{{ foreman_hosts_created.results  }}"

- name: Get host power status
  shell: |
    hammer -r host status --name {{ item.item.item.name }}.{{ www_domain }} | grep -i power | awk '{print $2}'
  register: powerstatus
  loop: "{{ foreman_hosts_created.results  }}"
  when: item.changed

#- debug:
#    msg: "{{ item }}"
#  loop: "{{ powerstatus.results }}"

#- name: Set host to boot from network device
#  command: >
#    hammer -r host boot --device pxe --name {{ item.item.item.name }}.{{ www_domain }}
#  loop:
#    "{{ foreman_hosts_created.results }}"
#  when:
#    - item.changed
#    - item.item.item.provider == "ipmi"

- name: Host Power-Cycle
  command: >
    hammer -r host
    {% if item.stdout == "off" %}
    start
    {% else %}
    reset
    {% endif %}
    --name {{ item.item.item.item.name }}.{{ www_domain }}
  loop: "{{ powerstatus.results }}"
  when: item.changed
