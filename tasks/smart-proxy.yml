---

- name: foreman-rake build apipie cache (be patient)
  block:
    - name: '/usr/sbin/foreman-rake apipie:cache --trace'
      command: /usr/sbin/foreman-rake apipie:cache --trace
      args:
        creates: "{{ foreman_config_dir }}/foreman_apipie_configured"
      register: apipie_cache_results
    - name: write lockfile on success
      file:
        state: touch
        modification_time: preserve
        access_time: preserve
        dest: "{{ foreman_config_dir }}/foreman_apipie_configured"
  always:
    - name: writing foreman-rake apipie:cache output to /var/log/foreman/apipie_cache.log
      blockinfile:
        dest: /var/log/foreman/apipie_cache.log
        insertafter: EOF
        create: yes
        state: present
        marker: "{{ ansible_date_time.iso8601 }}"
        content: |
          {% if apipie_cache_results.stderr is defined and apipie_cache_results.stderr != None %}
          {{ apipie_cache_results.stderr }}
          {% endif %}
          {% if apipie_cache_results.stdout is defined and apipie_cache_results.stdout != None %}
          {{ apipie_cache_results.stdout }}
          {% endif %}
      changed_when: False
  rescue:
    - fail:
        msg: |
          {% if apipie_cache_results.stderr is defined and apipie_cache_results.stderr != None %}
          {{ apipie_cache_results.stderr }}
          {% endif %}
          {% if apipie_cache_results.stdout is defined and apipie_cache_results.stdout != None %}
          {{ apipie_cache_results.stdout }}
          {% endif %}

- name: Install foreman-yml
  pip:
    name: "{{ foreman_yml_python_pkgs }}"
    state: present
    virtualenv: /opt/foreman-yml
    virtualenv_python: python2.7

- name: copy foreman-yml template for initial foreman smart-proxy config
  template:
    src: "smart-proxy/foreman_config.j2"
    dest: "/tmp/foreman_config.yml"

- name: configure foreman smart-proxy via foreman-yml
  block:
    - name: '/opt/foreman-yml/bin/foreman-yml /tmp/foreman_config.yml'
      command: /opt/foreman-yml/bin/foreman-yml /tmp/foreman_config.yml
      args:
        creates: "{{ foreman_config_dir }}/foreman_smartproxy_configured"
      register: foreman_yml_results
      failed_when: "foreman_yml_results.stdout | regex_search('(WARNING|ERROR)', multiline=True, ignorecase=True) or foreman_yml_results.rc != 0"
    - name: write lockfile on success
      file:
        state: touch
        modification_time: preserve
        access_time: preserve
        dest: "{{ foreman_config_dir }}/foreman_smartproxy_configured"
  always:
    - name: writing foreman-yml output to /var/log/foreman/foreman-yml-config.log
      blockinfile:
        dest: /var/log/foreman/foreman-yml-config.log
        insertafter: EOF
        create: yes
        state: present
        marker: "{{ ansible_date_time.iso8601 }}"
        content: |
          {% if foreman_yml_results.stderr is defined and foreman_yml_results.stderr != None %}
          {{ foreman_yml_results.stderr }}
          {% endif %}
          {% if foreman_yml_results.stdout is defined and foreman_yml_results.stdout != None %}
          {{ foreman_yml_results.stdout }}
          {% endif %}
      changed_when: False
  rescue:
    - fail:
        msg: |
          {% if foreman_yml_results.msg is defined and foreman_yml_results.msg != None %}
          Message: {{ foreman_yml_results.msg }}
          {% endif %}
          {% if foreman_yml_results.stderr is defined and foreman_yml_results.stderr != None %}
          STDERR: {{ foreman_yml_results.stderr }}
          {% endif %}
          {% if foreman_yml_results.stdout is defined and foreman_yml_results.stdout != None %}
          STDOUT: {{ foreman_yml_results.stdout | regex_search('^.*(WARNING|ERROR).*$', multiline=True, ignorecase=True) }}
          {% endif %}
