- name: Add the OS specific varibles
  include_vars: "{{ ansible_os_family }}.yml"
  tags:
    - always

- import_tasks: install.yml
  tags:
    - foreman-install

- import_tasks: configure.yml
  tags:
    - foreman-configure

- meta: flush_handlers
  tags:
    - always

- name: "Start/Restart the foreman service"
  systemd:
    name: foreman
    state: "{% if foreman_require_restart | default(false) %}restarted{% else %}started{% endif %}"
    enabled: yes
  register: foreman_started
  when:
    - foreman_enable_service
  notify:
    - reload nginx config
  tags:
    - always

- name: Verify foreman HTTP service is listening
  wait_for:
    host: "{{ foreman_interface | default(\"localhost\", true) }}"
    port: "{{ foreman_port | default('3000') }}"
    delay: 5
  when: foreman_enable_service
  ignore_errors: yes
  register: foreman_start_attempt
  tags:
    - always

- name: Get foreman journald logs if service does not appear to be up
  shell: journalctl _SYSTEMD_INVOCATION_ID=`systemctl show -p InvocationID --value foreman.service`
  register: foreman_journal
  when: foreman_start_attempt.failed
  tags:
    - always

- debug:
    var: |
      foreman_journal.stdout_lines
  when: foreman_start_attempt.failed
  failed_when: foreman_start_attempt.failed
  tags:
    - always

- name: "Start/Restart the foreman-proxy service"
  systemd:
    name: foreman-proxy
    state: "{% if foreman_proxy_require_restart | default(false) %}restarted{% else %}started{% endif %}"
    enabled: yes
  register: foreman_proxy_started
  when:
    - foreman_proxy_enable_service
  tags:
    - always

- name: Verify foreman-proxy service is listening
  wait_for:
    host: "{{ foreman_proxy_bind_host | default(ansible_default_ipv4.address) }}"
    port: "{{ foreman_proxy_port }}"
    delay: 5
  when: foreman_proxy_enable_service
  ignore_errors: yes
  register: foreman_proxy_start_attempt
  tags:
    - always

- name: Get foreman-proxy journald logs if service does not appear to be up
  shell: journalctl _SYSTEMD_INVOCATION_ID=`systemctl show -p InvocationID --value foreman-proxy.service`
  register: foreman_proxy_journal
  when: foreman_proxy_start_attempt.failed
  tags:
    - always

- debug:
    var: |
      foreman_proxy_journal.stdout_lines
  when: foreman_proxy_start_attempt.failed
  failed_when: foreman_proxy_start_attempt.failed
  tags:
    - always

- meta: flush_handlers
  tags:
    - always

- import_tasks: smart-proxy.yml
  tags:
    - foreman-smartproxy
- import_tasks: foreman-custom-auth.yml
  tags:
    - foreman-auth
    - foreman-settings
- import_tasks: foreman-custom-network.yml
  tags:
    - foreman-network
- import_tasks: foreman-custom-os.yml
  tags:
    - foreman-os
- import_tasks: foreman-custom-groups.yml
  tags:
    - foreman-groups
- import_tasks: foreman-custom-templates.yml
  tags:
    - foreman-templates
- import_tasks: foreman-custom-config.yml
  tags:
    - foreman-settings
- import_tasks: apt-cache.yml
  tags:
    - foreman-aptcache

- name: Print Foreman Package Version
  block:
    - name: Gather the rpm package facts
      package_facts:
        manager: auto

    - name: Capture Foreman Debug
      command: foreman-debug
      register: foreman_debug_output

    - name: Display Foreman Package Version and Debug Output
      debug:
        msg: |

          Foreman Installed Package Version:
          {{ hostvars[inventory_hostname].packages['foreman'] | to_nice_yaml }}

          Foreman Installed Smart-Proxy Package Version:
          {{ hostvars[inventory_hostname].packages['foreman-proxy'] | to_nice_yaml }}

          Debug Output:
          {{ foreman_debug_output.stdout }}
  when: (foreman_pkgs_updated | default(false)) or
        (foreman_proxy_pkgs_updated | default(false))
