- name: Add the OS specific varibles
  include_vars: "{{ ansible_os_family }}.yml"

- include_tasks: install.yml
  tags: [foremaninstall ]

- include_tasks: configure.yml
  tags: [foremanconfigure ]

- name: Start the foreman service
  systemd:
    name: foreman
    state: restarted
    enabled: yes
  register: foreman_started
  when: foreman_enable_service
  tags: [foremanconfigure, foremanservice]
  notify:
    - reload nginx config

- name: Verify foreman HTTP service is listening
  wait_for:
    host: "{{ foreman_interface | default(\"localhost\", true) }}"
    port: "{{ foreman_port | default('3000') }}"
    delay: 5
  when: foreman_started.changed and foreman_enable_service
  ignore_errors: yes
  register: foreman_start_attempt
  tags: [foremanconfigure, foremanservice]

- name: Get foreman journald logs if service does not appear to be up
  shell: journalctl _SYSTEMD_INVOCATION_ID=`systemctl show -p InvocationID --value foreman.service`
  register: foreman_journal
  when: foreman_start_attempt.failed is defined and foreman_start_attempt.failed == True
  tags: [foremanconfigure, foremanservice]

- fail:
    msg: "{{ foreman_journal.stdout_lines }}"
  when: foreman_start_attempt.failed is defined and foreman_start_attempt.failed == True
  tags: [foremanconfigure, foremanservice]

- name: Start the foreman-proxy service
  systemd:
    name: foreman-proxy
    state: restarted
    enabled: yes
  register: foreman_proxy_started
  when: foreman_proxy_enable_service
  tags: [foremanconfigure, foremanproxyservice ]

- name: Verify foreman-proxy service is listening
  wait_for:
    host: "{{ foreman_proxy_bind_host | default(ansible_default_ipv4.address) }}"
    port: "{{ foreman_proxy_port }}"
    delay: 5
  when: foreman_proxy_started.changed and foreman_proxy_enable_service
  ignore_errors: yes
  register: foreman_proxy_start_attempt
  tags: [foremanconfigure, foremanproxyservice ]

- name: Get foreman-proxy journald logs if service does not appear to be up
  shell: journalctl _SYSTEMD_INVOCATION_ID=`systemctl show -p InvocationID --value foreman-proxy.service`
  register: foreman_proxy_journal
  when: foreman_proxy_start_attempt.failed is defined and foreman_proxy_start_attempt.failed == True
  tags: [foremanconfigure, foremanproxyservice ]

- fail:
    msg: "{{ foreman_proxy_journal.stdout_lines }}"
  when: foreman_proxy_start_attempt.failed is defined and foreman_proxy_start_attempt.failed == True
  tags: [foremanconfigure, foremanproxyservice ]

- meta: flush_handlers

- include_tasks: smart-proxy.yml
  tags: [foremancustomize, foremansmartproxy]

- include_tasks: foreman-custom-config.yml
  tags: [foremancustomize, foremansettings]

- include_tasks: foreman-custom-network.yml
  tags: [foremancustomize, foremannetwork]

- include_tasks: foreman-custom-os.yml
  tags: [foremancustomize, foremanos]

- include_tasks: foreman-custom-groups.yml
  tags: [foremancustomize, foremangroups]

- include_tasks: foreman-custom-templates.yml
  tags: [foremancustomize, foremantemplates]

- include_tasks: apt-cache.yml
  tags: [foremanaptcache]
