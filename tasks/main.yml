- name: Add the OS specific varibles
  include_vars: "{{ ansible_os_family }}.yml"

- import_tasks: install.yml

- import_tasks: configure.yml

- meta: flush_handlers

- name: Start the foreman service
  systemd:
    name: foreman
    state: started
    enabled: yes
  register: foreman_started
  when:
    - foreman_enable_service
  notify:
    - check_foreman_running
    - reload nginx config

- meta: flush_handlers

#- name: Restart the foreman service
#  systemd:
#    name: foreman
#    state: restarted
#    enabled: yes
#  register: foreman_started
#  when:
#    - foreman_enable_service
#    - foreman_require_restart | default(false)
#  notify:
#    - reload nginx config
#
#- name: Verify foreman HTTP service is listening
#  wait_for:
#    host: "{{ foreman_interface | default(\"localhost\", true) }}"
#    port: "{{ foreman_port | default('3000') }}"
#    delay: 5
#  when: foreman_started.changed and foreman_enable_service
#  ignore_errors: yes
#  register: foreman_start_attempt
#
#- name: Get foreman journald logs if service does not appear to be up
#  shell: journalctl _SYSTEMD_INVOCATION_ID=`systemctl show -p InvocationID --value foreman.service`
#  register: foreman_journal
#  when: foreman_start_attempt.failed is defined and foreman_start_attempt.failed == True
#
#- fail:
#    msg: "{{ foreman_journal.stdout_lines }}"
#  when: foreman_start_attempt.failed is defined and foreman_start_attempt.failed == True

- name: Restart the foreman-proxy service
  systemd:
    name: foreman-proxy
    state: restarted
    enabled: yes
  register: foreman_proxy_started
  when:
    - foreman_proxy_enable_service
    - foreman_proxy_require_restart | default(false)

- name: Verify foreman-proxy service is listening
  wait_for:
    host: "{{ foreman_proxy_bind_host | default(ansible_default_ipv4.address) }}"
    port: "{{ foreman_proxy_port }}"
    delay: 5
  when: foreman_proxy_started.changed and foreman_proxy_enable_service
  ignore_errors: yes
  register: foreman_proxy_start_attempt

- name: Get foreman-proxy journald logs if service does not appear to be up
  shell: journalctl _SYSTEMD_INVOCATION_ID=`systemctl show -p InvocationID --value foreman-proxy.service`
  register: foreman_proxy_journal
  when: foreman_proxy_start_attempt.failed is defined and foreman_proxy_start_attempt.failed == True

- fail:
    msg: "{{ foreman_proxy_journal.stdout_lines }}"
  when: foreman_proxy_start_attempt.failed is defined and foreman_proxy_start_attempt.failed == True

- meta: flush_handlers

- import_tasks: smart-proxy.yml

- import_tasks: foreman-custom-auth.yml

- import_tasks: foreman-custom-network.yml

- import_tasks: foreman-custom-os.yml

- import_tasks: foreman-custom-groups.yml

- import_tasks: foreman-custom-templates.yml

- import_tasks: foreman-custom-config.yml

- import_tasks: apt-cache.yml
