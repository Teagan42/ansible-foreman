---

- name: Generate foreman settings config from template
  template:
    src: etc/foreman/settings.yaml.j2
    dest: "{{ foreman_config_dir }}/settings.yaml"
    mode: 0755
    backup: yes
  notify: restart foreman
  register: settings_config

- name: Ensure .hammer directory exists
  file:
    state: directory
    path: /root/.hammer
    mode: 750

- name: Generate hammer-cli authentication file
  template:
    src: hammer/cli_config.yml.j2
    dest: /root/.hammer/cli_config.yml
    mode: 644

- name: get foreman-proxy user info
  getent:
    database: passwd
    key: "{{ foreman_proxy_user }}"

- name: set foreman-proxy user home directory
  set_fact:
    foreman_proxy_user_homedir: "{{ getent_passwd[foreman_proxy_user][4] }}"

- name: Create foreman-proxy user ssh directory
  file:
    path: "/var/lib/foreman-proxy/ssh"
    state: directory
    owner: foreman-proxy
    group: foreman-proxy
    mode: 0755

- name: Ensure foreman-proxy .ssh symlink exists
  file:
    state: link
    src: /var/lib/foreman-proxy/ssh
    dest: "{{ foreman_proxy_user_homedir }}/.ssh"
    owner: foreman-proxy
    group: foreman-proxy

- name: Copy foreman-proxy user ssh config
  copy:
    owner: foreman-proxy
    group: foreman-proxy
    mode: 0755
    dest: "{{ foreman_proxy_user_homedir }}/.ssh/config"
    content: |
      StrictHostKeyChecking no
      UserKnownHostsFile /dev/null

- name: Copy ssh private key to server
  copy:
    mode: 0600
    owner: foreman-proxy
    group: foreman-proxy
    content: "{{ foreman_ssh_private_key }}"
    dest: "{{ foreman_proxy_user_homedir }}/.ssh/id_rsa"

- name: Copy foreman-proxy user ssh pubkey to server
  copy:
    mode: 0644
    owner: foreman-proxy
    group: foreman-proxy
    dest: "{{ foreman_proxy_user_homedir }}/.ssh/id_rsa.pub"
    content: "{{ foreman_ssh_public_key }}"

- name: Generate foreman database config from template
  template:
    src: etc/foreman/database.yml.j2
    dest: "{{ foreman_config_dir }}/database.yml"
    mode: 0755
    backup: yes
  notify: restart foreman
  register: db_config

- name: Perform initial database setup (migrate)
  command: foreman-rake db:migrate
  register: migrate_results
  notify: restart foreman
  when: db_config is changed or foreman_perform_rake_tasks
  ignore_errors: yes

- fail:
    msg: "{{ migrate_results.stdout_lines }}"
  when: migrate_results.failed is defined and migrate_results.failed == True


- name: perform initial database setup (seed)
  command: foreman-rake db:seed
  register: seed_results
  notify: restart foreman
  when: settings_config is changed or foreman_perform_rake_tasks
  ignore_errors: yes

- fail:
    msg: "{{ seed_results.stdout_lines }}"
  when: seed_results.failed is defined and seed_results.failed == True


- name: Check for foreman admin password change
  copy:
    dest: "{{ foreman_config_dir }}/password_configured"
    content: "{{ foreman_admin_password | checksum }}"
  register: foreman_pw_updated

- name: set foreman admin password
  command: "foreman-rake permissions:reset username={{ foreman_admin_user }} password={{ foreman_admin_password }}"
  when: foreman_pw_updated is changed or foreman_perform_rake_tasks
  no_log: True

- name: template foreman-proxy settings.yml
  template:
    src: etc/foreman-proxy/settings.yml.j2
    dest: "{{ foreman_proxy_config_dir }}/settings.yml"
    backup: yes
  notify:
    - restart foreman-proxy

- name: "Template /etc/foreman-proxy/settings.d files"
  template:
    src: '{{ item.src }}'
    dest: '{{ foreman_proxy_config_dir }}/settings.d/{{ item.path }}'
    backup: yes
  with_filetree: 'templates/etc/foreman-proxy/settings.d'
  when: item.state == 'file'
  notify:
    - restart foreman-proxy

#- name: template foreman-proxy dhcp.yml
#  template:
#    src: etc/foreman-proxy/dhcp.yml.j2
#    dest: "{{ foreman_proxy_config_dir }}/settings.d/dhcp.yml"
#    backup: yes
#  when: foreman_proxy_dhcp
#  notify:
#    - restart foreman-proxy
#
#- name: template foreman-proxy dhcp_isc.yml
#  template:
#    src: etc/foreman-proxy/dhcp_isc.yml.j2
#    dest: "{{ foreman_proxy_config_dir }}/settings.d/dhcp_isc.yml"
#    backup: yes
#  when: foreman_proxy_dhcp
#  notify:
#    - restart foreman-proxy
#
#- name: template foreman-proxy httpboot.yml
#  template:
#    src: etc/foreman-proxy/httpboot.yml.j2
#    dest: "{{ foreman_proxy_config_dir }}/settings.d/httpboot.yml"
#    backup: yes
#  when: foreman_proxy_httpboot
#  notify:
#    - restart foreman-proxy

- name: fix dhcp config directory permissions
  file:
    path: "{{ foreman_proxy_dhcp_config_dir }}"
    mode: 0755
    state: directory
  when: foreman_proxy_dhcp
  notify:
    - restart foreman-proxy

#- name: template foreman-proxy tftp.yaml
#  template:
#    src: etc/foreman-proxy/tftp.yml.j2
#    dest: "{{ foreman_proxy_config_dir }}/settings.d/tftp.yml"
#    backup: yes
#  when: foreman_proxy_tftp
#  notify:
#    - restart foreman-proxy

- name: ensure correct permissions for tftp pxe directories
  file:
    path: "{{ foreman_proxy_tftp_dir }}"
    owner: "{{ foreman_proxy_user }}"
    group: "{{ foreman_proxy_group }}"
    recurse: yes
    state: directory
  when: foreman_proxy_tftp

- name: Download foreman auto-discovery image
  unarchive:
    src: http://downloads.theforeman.org/discovery/releases/latest/fdi-image-latest.tar
    dest: "{{ foreman_proxy_tftp_dir }}/boot"
    remote_src: yes
    owner: "{{ foreman_proxy_user }}"
    group: "{{ foreman_proxy_group }}"
    creates: "{{ foreman_proxy_tftp_dir }}/boot/fdi-image"
  register: fdi_download
  until: not fdi_download.failed
  retries: 5
  delay: 5
