---
- name: Install any necessary dependencies [Debian/Ubuntu]
  apt:
    name: "{{ foreman_dependency_pkgs }}"
    state: present
    update_cache: yes
    cache_valid_time: 3600

- name: Import Foreman GPG signing key [Debian/Ubuntu]
  apt_key:
    url: "{{ foreman_gpg_key_url }}"
    state: present

- name: Add Foreman repository [Debian/Ubuntu]
  apt_repository:
    repo: >-
      deb {{ foreman_repo_url }}
      {% if ansible_distribution == 'Ubuntu' and ansible_distribution_major_version >= '19' %}
      bionic
      {% elif ansible_distribution == 'Debian' and ansible_distribution_major_version >= '10' %}
      stretch
      {% else %}
      {{ ansible_distribution_release }}
      {% endif %}
      {{ foreman_install_version }}
    state: present

- name: Add Foreman Plugins repository [Debian/Ubuntu]
  apt_repository:
    repo: "deb {{ foreman_repo_url }} plugins {{ foreman_plugins_version }}"
    state: present

- name: "Add Ansible Repository (For Foreman-Ansible Dependencies)"
  apt_repository:
    repo: ppa:ansible/ansible
    state: present

- name: "If installing Foreman > 1.21, set up Foreman Plugins 1.21 repository for smart-proxy remote-execution workaround"
  apt_repository:
    repo: "deb {{ foreman_repo_url }} plugins 1.21"
    state: present
  when: foreman_plugins_version is version('1.21', '>')

- name: Add Foreman repository [Debian/Ubuntu]
  apt_repository:
    repo: >-
      deb {{ foreman_repo_url }}
      {% if ansible_distribution == 'Ubuntu' and ansible_distribution_major_version >= '19' %}
      bionic
      {% elif ansible_distribution == 'Debian' and ansible_distribution_major_version >= '10' %}
      stretch
      {% else %}
      {{ ansible_distribution_release }}
      {% endif %}
      1.21
    state: present
  when: foreman_install_version is version('1.21', '>')

- name: "If Ubuntu version > Xenial, set up up Xenial universe repo for ruby-concurrent pinning"
  apt_repository:
    repo: "deb http://archive.ubuntu.com/ubuntu xenial universe"
    state: present
  when:
    - ansible_distribution == 'Ubuntu'
    - ansible_distribution_version is version('16.04', '>')

- name: "Set pinned versions for ruby-concurrent and ruby-foreman-remote-execution-core"
  copy:
    src: 10-foreman-pinned
    dest: /etc/apt/preferences.d/10-foreman-pinned
    mode: 0644

- name: Install foreman packages [Debian/Ubuntu]
  apt:
    name: "{{ foreman_pkgs }}"
    state: latest
    update_cache: yes
    cache_valid_time: 3600
  register: foreman_installed
  notify: capture_foreman_version

- name: Install foreman proxy packages [Debian/Ubuntu]
  apt:
    name: "{{ foreman_proxy_pkgs }}"
    state: latest
    update_cache: yes
    cache_valid_time: 3600

- name: Install foreman python2 requirements
  pip:
    name: "{{ foreman_python2_pkgs }}"
    state: present
    executable: pip2
  when:
    - ansible_python.version.major == 2

- name: Install foreman python3 requirements
  pip:
    name: "{{ foreman_python3_pkgs }}"
    state: present
    executable: pip3
  when:
    - ansible_python.version.major == 3

- name: template /etc/default/foreman
  template:
    src: etc/default/foreman.j2
    dest: "/etc/default/foreman"
    backup: no
  notify: restart foreman

- name: Enable the foreman service
  systemd:
    name: foreman
    enabled: yes
  when: foreman_enable_service
